{
  "_from": "opusscript",
  "_id": "opusscript@0.0.6",
  "_inBundle": false,
  "_integrity": "sha512-F7nx1SWZCD5Rq2W+5Fx39HlkRkz/5Zqt0LglEB9uHexk8HjedDEiM+u/Y2rBfDFcS/0uQIWu2lJhw+Gjsta+cA==",
  "_location": "/opusscript",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "opusscript",
    "fetchSpec": "latest",
    "name": "opusscript",
    "raw": "opusscript",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/opusscript/-/opusscript-0.0.6.tgz",
  "_shasum": "cf492fc5fb2c819af296ae02eaa3cf210433c9ba",
  "_spec": "opusscript",
  "_where": "C:\\Users\\Admin\\Desktop\\Proyectos\\bots\\Box",
  "author": {
    "name": "abalabahaha"
  },
  "bugs": {
    "url": "https://github.com/abalabahaha/opusscript/issues"
  },
  "bundleDependencies": false,
  "dependencies": {},
  "deprecated": false,
  "description": "JS bindings for libopus 1.2.1, ported with emscripten",
  "devDependencies": {},
  "homepage": "https://github.com/abalabahaha/opusscript#readme",
  "keywords": [
    "emscripten",
    "encoder",
    "libopus"
  ],
  "license": "MIT",
  "main": "index.js",
  "name": "opusscript",
  "optionalDependencies": {},
  "readme": "opusscript\n==========\n### JS bindings for libopus 1.2.1, ported with emscripten\n\n```js\nvar opusscript = require(\"opusscript\");\n\n// 48kHz sampling rate, 20ms frame duration, stereo audio (2 channels)\nvar samplingRate = 48000;\nvar frameDuration = 20;\nvar channels = 2;\n\n// Optimize encoding for audio. Available applications are VOIP, AUDIO, and RESTRICTED_LOWDELAY\nvar encoder = new opusscript(samplingRate, channels, opusscript.Application.AUDIO);\n\nvar frameSize = samplingRate * frameDuration / 1000;\n\n// Get PCM data from somewhere and encode it into opus\nvar pcmData = new Buffer(pcmSource);\nvar encodedPacket = encoder.encode(pcmData, frameSize);\n\n// Decode the opus packet back into PCM\nvar decodedPacket = encoder.decode(encodedPacket);\n\n// Delete the encoder when finished with it (Emscripten does not automatically call C++ object destructors)\nencoder.delete();\n```\n\n#### TypeScript\n\nSince this module wasn't written for TypeScript, you need to use `import = require` syntax.\n\n```ts\n// Import using:\nimport OpusScript = require('opusscript');\n\n// and NOT:\nimport OpusScript from 'opusscript';\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/abalabahaha/opusscript.git"
  },
  "version": "0.0.6"
}
